name: ci
on:
  push:
    branches:
      - master
      - try
  pull_request:
jobs:
  build-shell:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: cachix/install-nix-action@v17
        with:
          extra_nix_config: |
            access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}
            experimental-features = nix-command flakes recursive-nix
      - uses: cachix/cachix-action@v12
        with:
          name: bbigras-nix-config
          signingKey: ${{ secrets.CACHIX_SIGNING_KEY }}
          extraPullNames: "dendrite-demo-pinecone,nix-community,nix-on-droid,pre-commit-hooks"
      - name: build-shell
        run: |
          cachix watch-exec bbigras-nix-config -- \
            nix build -L --keep-going \
            .\#devShells.x86_64-linux.default.inputDerivation

  get-hosts:
    runs-on: ubuntu-latest
    outputs:
      hosts: ${{ steps.get-hosts.outputs.hosts }}
    steps:
      - uses: actions/checkout@v3
      - uses: cachix/install-nix-action@v17
      - id: get-hosts
        run: echo "::set-output name=hosts::$(nix eval --json -f ./nix/hosts.nix all | jq -c 'keys | . += ["pixel6"]')"

  build-host:
    name: build-${{ matrix.host }}
    runs-on: ubuntu-latest
    needs: get-hosts
    strategy:
      fail-fast: false
      matrix:
        host: ${{ fromJson(needs.get-hosts.outputs.hosts) }}
    steps:
      - uses: docker/setup-qemu-action@v2
        if: ${{ matrix.host == 'pixel6' }}
      - uses: actions/checkout@v3
      - uses: cachix/install-nix-action@v17
        with:
          extra_nix_config: |
            access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}
            experimental-features = nix-command flakes recursive-nix
      - uses: cachix/cachix-action@v12
        with:
          name: bbigras-nix-config
          signingKey: ${{ secrets.CACHIX_SIGNING_KEY }}
          extraPullNames: "dendrite-demo-pinecone,nix-community,nix-on-droid,pre-commit-hooks"
      - name: add-lite-overlay
        run: sed -i '/.*overlays\.lite/s/#\s*//g' flake.nix
      - name: build-host
        uses: nick-invision/retry@v2
        with:
          max_attempts: 2
          timeout_minutes: 720
          retry_on: error
          command: |
            cachix watch-exec bbigras-nix-config -- \
              nix run nixpkgs#nix-build-uncached -- \
                --keep-going \
                -build-flags '--extra-platforms "aarch64-linux i686-linux"' \
                -A packages.x86_64-linux.${{ matrix.host }}

  check:
    runs-on: ubuntu-latest
    needs: [ build-host ]
    if: always()
    steps:
      - name: check
        run: |
          status_uri="https://api.github.com/repos/${{ github.repository }}/actions/runs/${{ github.run_id }}/jobs"
          user_str="admin:${{ secrets.PAT }}"
          run="$(curl -X GET -s -u "${user_str}" "${status_uri}")"
          jobs="$(jq '.jobs[]' <<< "${run}")"
          statuses="$(jq '{job: .name, status: .conclusion}' <<< "${jobs}")"
          builds="$(jq 'select(.job | contains("build"))' <<< "${statuses}")"
          failed="$(jq 'select(.status | contains("success") | not)' <<< "${builds}")"

          if [ -z "${failed}" ]; then
            echo "OK"
          else
            echo "FAIL"
            exit 1
          fi
